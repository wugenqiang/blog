<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo Next 加入评论功能gitalk]]></title>
    <url>%2F2019%2F03%2F31%2FHexo-Next-%E5%8A%A0%E5%85%A5%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BDgitalk%2F</url>
    <content type="text"><![CDATA[Gitalk: 一个基于 Github Issue 和 Preact 开发的评论插件 详情Demo可见:https://gitalk.github.io/ 增加评论区 注册OAuth Application 在GitHub上注册新应用, 链接:https://github.com/settings/applications/new 参数 说明 Application name 应用名称, 可以任意填入 Homepage URL 网站URL, 注意用https://开头, 开头如https://vonsdite.cn Application description 应用描述, 可以任意填入 Authorization callback URL 网站URL, 注意用https://开头, 如https://vonsdite.cn 注册后记下Client ID和Client Secret, 后续要使用到 md5.min.js在themes\next\source\js\src\目录下创建md5.min.js, 并添加如下内容: 加这个代码的原因是: 部分文章的评论区会报Error: Validation Failed, 具体原因是由于 Github 限制labels长度不能超过50 引起的, 该问题解决方案来自Gitalk项目仓Issues 115, 通过MD5加密ID来缩短labels长度。 1!function(n)&#123;&quot;use strict&quot;;function t(n,t)&#123;var r=(65535&amp;n)+(65535&amp;t);return(n&gt;&gt;16)+(t&gt;&gt;16)+(r&gt;&gt;16)&lt;&lt;16|65535&amp;r&#125;function r(n,t)&#123;return n&lt;&lt;t|n&gt;&gt;&gt;32-t&#125;function e(n,e,o,u,c,f)&#123;return t(r(t(t(e,n),t(u,f)),c),o)&#125;function o(n,t,r,o,u,c,f)&#123;return e(t&amp;r|~t&amp;o,n,t,u,c,f)&#125;function u(n,t,r,o,u,c,f)&#123;return e(t&amp;o|r&amp;~o,n,t,u,c,f)&#125;function c(n,t,r,o,u,c,f)&#123;return e(t^r^o,n,t,u,c,f)&#125;function f(n,t,r,o,u,c,f)&#123;return e(r^(t|~o),n,t,u,c,f)&#125;function i(n,r)&#123;n[r&gt;&gt;5]|=128&lt;&lt;r%32,n[14+(r+64&gt;&gt;&gt;9&lt;&lt;4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e&lt;n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]&#125;function a(n)&#123;var t,r=&quot;&quot;,e=32*n.length;for(t=0;t&lt;e;t+=8)r+=String.fromCharCode(n[t&gt;&gt;5]&gt;&gt;&gt;t%32&amp;255);return r&#125;function d(n)&#123;var t,r=[];for(r[(n.length&gt;&gt;2)-1]=void 0,t=0;t&lt;r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t&lt;e;t+=8)r[t&gt;&gt;5]|=(255&amp;n.charCodeAt(t/8))&lt;&lt;t%32;return r&#125;function h(n)&#123;return a(i(d(n),8*n.length))&#125;function l(n,t)&#123;var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length&gt;16&amp;&amp;(o=i(o,8*n.length)),r=0;r&lt;16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))&#125;function g(n)&#123;var t,r,e=&quot;&quot;;for(r=0;r&lt;n.length;r+=1)t=n.charCodeAt(r),e+=&quot;0123456789abcdef&quot;.charAt(t&gt;&gt;&gt;4&amp;15)+&quot;0123456789abcdef&quot;.charAt(15&amp;t);return e&#125;function v(n)&#123;return unescape(encodeURIComponent(n))&#125;function m(n)&#123;return h(v(n))&#125;function p(n)&#123;return g(m(n))&#125;function s(n,t)&#123;return l(v(n),v(t))&#125;function C(n,t)&#123;return g(s(n,t))&#125;function A(n,t,r)&#123;return t?r?s(t,n):C(t,n):r?m(n):p(n)&#125;&quot;function&quot;==typeof define&amp;&amp;define.amd?define(function()&#123;return A&#125;):&quot;object&quot;==typeof module&amp;&amp;module.exports?module.exports=A:n.md5=A&#125;(this); 修改主题配置文件_config.yml 在主题配置文件themes/next/_config.yml中添加如下内容: 123456789101112gitalk: enable: true github_id: # Github repo owner repo: # Repository name to store issues client_id: # Github Application Client ID client_secret: # Github Application Client Secret admin_user: # GitHub repo owner and collaborators, only these guys can initialize github issues distraction_free_mode: true # Facebook-like distraction free mode # Gitalk&apos;s display language depends on user&apos;s browser or system environment # If you want everyone visiting your site to see a uniform language, you can set a force language value # Available value: en, es-ES, fr, ru, zh-CN, zh-TW language: 以上就是Next中添加gitalk评论的配置。 博客上传到GitHub上后, 打开页面进入某一篇文章 就可以看到： 如果上述配置均无误, 点击使用GitHub登录就会建立一个评论区(实际上是在你的Github博客仓库下开了一个Issue)]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo获取网易云音乐外链]]></title>
    <url>%2F2019%2F03%2F17%2FHexo%E8%8E%B7%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE%2F</url>
    <content type="text"><![CDATA[Hexo获取网易云音乐外链网易云音乐MP3外链真实地址获取方法，可用于各种背景音乐、直链播放… 一、进入网易云音乐官网打开网易云音乐，找到喜欢的歌，复制网址的ID， 例如： 地址为：https://music.163.com/#/song?id=350909 id就是350909 那么，这首歌的MP3外链地址就是：https://music.163.com/song/media/outer/url?id=350909.mp3 是不是很简单呢，咱们来播放一下 二、放入Hexo中播放使用下面的格式，插在你希望的地方就可以啦： 1&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/song/media/outer/url?id=350909.mp3&quot;&gt;&lt;/iframe&gt; 可以自己到我的技术博客那个音乐吧浏览，底部哦 这是地址，比小心心~~ 我是地址点我点我哟 其实这个还有一个好处就是可以下载，唯一的小缺憾就是不美观耶，不过耳朵舒服呢]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客NexT主题开启文章目录和调整样式]]></title>
    <url>%2F2019%2F03%2F17%2FHexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95%E5%92%8C%E8%B0%83%E6%95%B4%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[一、前言Hexo博客NexT主题中是有目录的，只是在默认情况下没有开启，需要我们来手动开启。 二、修改样式文件custom.styl文章目录样式文件custom.styl文件位于themes/next/source/css/_custom 打开后添加内容： 1.文章目录默认展开12//文章目录默认展开.post-toc .nav .nav-child &#123; display: block; &#125; 2.文章目录字体大小调整123.post-toc ol &#123; font-size : 13px; &#125; 三、修改主题配置文件主题配置文件位于themes/next/_config.yml 每行目录超长自动换行 123toc: enable: true wrap: true 四、结果图展示]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Springboot实现小程序端发送邮箱验证码功能]]></title>
    <url>%2F2019%2F03%2F16%2FSpringboot%E5%AE%9E%E7%8E%B0%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[Springboot实现小程序端的邮箱验证一、配置项 配置pom文件，引入发送邮件的依赖 在pom文件中添加： 12345&lt;!--邮件发送核心包--&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;&lt;/dependency&gt; 修改配置文件application.yml，这里以QQ邮箱为例 我这里使用的是yml方式，当然也可以采用properties方式来写 1234567891011121314#邮件发送配置spring: mail: default-encoding: UTF-8 host: smtp.qq.com username: 你的邮箱 password: 邮箱授权码 properties: mail: smtp: auth: true starttls: enable: true required: true 邮箱授权码可以按以下方法获取: 打开QQ邮箱网页→设置→账户→POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务→开启POP3/SMTP服务，然后就能看到授权码了 二、编写mailService和mailServiceImpl即邮件服务层和邮件服务接口实现层 ${spring.mail.username}是在yml中配置的属性，这里有一个方法，第一个是发送普通邮件，第二个是发送带有附件的邮件 邮件服务层（IMailService） 12345678public interface IMailService &#123; //发送普通邮件 void sendSimpleMail(String to,String title,String content); //发送带有附件的邮件 void sendAttachmentsMail(String to, String title, String content, List&lt;File&gt; fileList);&#125; 邮件服务接口实现层（MailServiceImpl） 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849@Servicepublic class MailServiceImpl implements IMailService &#123; @Value(&quot;$&#123;spring.mail.username&#125;&quot;) private String from; @Resource private JavaMailSender mailSender; Logger logger = LoggerFactory.getLogger(this.getClass()); //发送普通邮件 @Override public void sendSimpleMail(String to, String title, String content) &#123; SimpleMailMessage message = new SimpleMailMessage(); message.setFrom(from); message.setTo(to); message.setSubject(title); message.setText(content); mailSender.send(message); logger.info(&quot;邮件发送成功&quot;); &#125; //发送带有附件的邮件 @Override public void sendAttachmentsMail(String to, String title, String content, List&lt;File&gt; fileList) &#123; MimeMessage message = mailSender.createMimeMessage(); try &#123; MimeMessageHelper helper = new MimeMessageHelper(message,true); helper.setFrom(from); helper.setTo(to); helper.setSubject(title); helper.setText(content); String fileName = null; for (File file:fileList) &#123; fileName = MimeUtility.encodeText(file.getName(), &quot;GB2312&quot;, &quot;B&quot;); helper.addAttachment(fileName, file); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; mailSender.send(message); logger.info(&quot;邮件发送成功&quot;); &#125;&#125; 三、编写controller即邮件发送控制层 12345678910111213141516171819//获取邮箱验证的验证码 @RequestMapping(&quot;/getCheckCode&quot;) public JsonResult getCheckCode(HttpServletRequest request) &#123; //获取微信小程序get的参数值并打印 String userEmail = request.getParameter(&quot;userEmail&quot;); user = userService.queryUserByUserEmail(userEmail); if (null == user) &#123; return new JsonResult(JsonResponseStatus.EMPTY.getCode(), JsonResponseStatus.EMPTY.getMsg()); &#125;else&#123; String checkCode = String.valueOf(new Random().nextInt(899999) + 100000); String message = &quot;您的注册验证码为：&quot;+checkCode; try &#123; mailService.sendSimpleMail(userEmail, &quot;注册验证码&quot;, message); &#125;catch (Exception e)&#123; return new JsonResult(JsonResponseStatus.EMPTY.getCode(), JsonResponseStatus.EMPTY.getMsg()); &#125; return new JsonResult(JsonResponseStatus.SUCCESS.getCode(), JsonResponseStatus.SUCCESS.getMsg(),checkCode); &#125; &#125; 附Web网页上可以用的控制层代码： 12345678910111213141516171819@Controllerpublic class MailController &#123; @Resource private IMailService mailService; @RequestMapping(&quot;getCheckCode&quot;) @ResponseBody public String getCheckCode(String email)&#123; String checkCode = String.valueOf(new Random().nextInt(899999) + 100000); String message = &quot;您的注册验证码为：&quot;+checkCode; try &#123; mailService.sendSimpleMail(email, &quot;注册验证码&quot;, message); &#125;catch (Exception e)&#123; return &quot;&quot;; &#125; return checkCode; &#125;&#125; 四、编写小程序邮箱验证页面12345678910111213141516171819202122232425&lt;!--pages/getCheckCode/getCheckCode.wxml--&gt;&lt;form bindsubmit=&quot;getCheckCode&quot;&gt; &lt;view class=&quot;form-list&quot;&gt; &lt;view class=&quot;form-item&quot;&gt; &lt;view class=&quot;form-item-hd&quot;&gt;邮箱&lt;/view&gt; &lt;view class=&quot;form-item-bd&quot;&gt; &lt;input type=&quot;email&quot; name=&quot;userEmail&quot; value=&quot;&#123;&#123;userEmail&#125;&#125;&quot; placeholder=&quot;请输入邮箱&quot; maxlength=&quot;25&quot; /&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;!--按钮--&gt; &lt;button formType=&quot;submit&quot; class=&quot;edit-btn&quot;&gt;获取验证码&lt;/button&gt;&lt;/form&gt;&lt;form bindsubmit=&quot;toPasswordReset&quot;&gt; &lt;view class=&quot;form-list&quot;&gt; &lt;view class=&quot;form-item&quot;&gt; &lt;view class=&quot;form-item-hd&quot;&gt;验证码&lt;/view&gt; &lt;view class=&quot;form-item-bd&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;checkCode&quot; value=&quot;&#123;&#123;checkCode&#125;&#125;&quot; placeholder=&quot;请输入验证码&quot; maxlength=&quot;20&quot; /&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;button formType=&quot;submit&quot; class=&quot;edit-btn&quot;&gt;进行验证&lt;/button&gt;&lt;/form&gt; 五、测试 好了，就分享到这边了啊，有问题可以在下面留言…]]></content>
      <categories>
        <category>Springboot</category>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>邮箱验证</tag>
        <tag>Springboot</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数学笔记]]></title>
    <url>%2F2019%2F03%2F11%2Fmath%2F</url>
    <content type="text"><![CDATA[数学资料汇总 #高等数学 #线性代数]]></content>
      <categories>
        <category>考研数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
</search>
