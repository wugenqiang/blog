<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EnjoyToShare</title>
  
  <subtitle>身体和灵魂总要有一个在路上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.enjoytoshare.club/"/>
  <updated>2019-04-09T19:04:19.000Z</updated>
  <id>https://blog.enjoytoshare.club/</id>
  
  <author>
    <name>WuGenQiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git命令手动备份Hexo博客源文件</title>
    <link href="https://blog.enjoytoshare.club/article/manual_backup_blog_source_files.html"/>
    <id>https://blog.enjoytoshare.club/article/manual_backup_blog_source_files.html</id>
    <published>2019-04-09T19:04:19.000Z</published>
    <updated>2019-04-09T19:04:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>自从接触了Hexo+NexT之后，发现离不开了，以后有能力的时候一定重新架构一下，使得更加个性化，最大程度的满足我们对于软件的需求，大家都知道，如果写东西在本地的话，最怕的应该就是更换电脑，还要重新搭建博客了，所以备份对于我们来说特别重要！备份博客就是本篇博客文章的主旨了，一定要攻下这座城堡。<br>我曾经看过Git备份Hexo博客源文件的方式，所以在这里记录一下……</p><a id="more"></a><h1 id="二、方案"><a href="#二、方案" class="headerlink" title="二、方案"></a>二、方案</h1><p>想到的解决办法无非是:</p><ul><li>直接U盘拷贝</li><li>博客文件托管在Github或者Gitee上</li></ul><p>Git提交正确步骤：<br>（1）git init //初始化仓库<br>（2）git add .(文件name) //添加文件到本地仓库<br>（3）git commit -m “first commit” //添加文件描述信息<br>（4）git remote add origin + 远程仓库地址 //链接远程仓库，创建主分支<br>（5）git pull –rebase origin master // 把本地仓库的变化连接到远程仓库主分支<br>（6）git push -u origin master //把本地仓库的文件推送到远程仓库</p><p>考虑了很多方面，觉得还是进行托管最符合我们的需求。</p><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><p>当然可以直接通过IDEA进行上传到Github或者Gitee上，为了熟悉一下git操作，在这里使用一下git基础命令来完成上传任务。</p><h2 id="1-新建repository"><a href="#1-新建repository" class="headerlink" title="1.新建repository"></a>1.新建repository</h2><p>在Github下创建一个新的repository，取名为<code>myblog</code>。(与本地的Hexo源码文件夹同名即可)<br>创建的时候<code>最好为空</code>，最好<code>不要勾选创建README.md</code>,否则后面会有小问题，不过我会提供解决办法。</p><h2 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2.创建仓库"></a>2.创建仓库</h2><p>进入本地的Hexo文件夹(E:\work\myblog)，在这个地方使用<code>git Bash here</code>执行以下命令创建仓库:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409192241.png" alt></p><h2 id="3-修改-gitignore文件"><a href="#3-修改-gitignore文件" class="headerlink" title="3.修改.gitignore文件"></a>3.修改.gitignore文件</h2><p>如果没有请手动创建一个，在里面加入<code>*.log</code> 和 <code>public/</code> 以及<code>.deploy*/</code>。因为每次执行<code>hexo g</code>命令时，上述目录都会被重写更新。因此忽略这两个目录下的文件更新，加快push速度。<br>注：如果文件中有<code>*.log</code> 和 <code>public/</code> 以及<code>.deploy*/</code>这些的时候，直接进行下一步：</p><h2 id="4-提交Hexo源码"><a href="#4-提交Hexo源码" class="headerlink" title="4.提交Hexo源码"></a>4.提交Hexo源码</h2><p>执行以下命令，完成Hexo源码在本地的提交：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;添加hexo源码文件作为备份&quot;</span><br></pre></td></tr></table></figure></p><h2 id="5-设置远程仓库地址"><a href="#5-设置远程仓库地址" class="headerlink" title="5.设置远程仓库地址"></a>5.设置远程仓库地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/wugenqiang/myblog.git</span><br></pre></td></tr></table></figure><p>如果出现问题：fatal: remote origin already exists</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409194211.png" alt></p><p>解决办法如下：<br>（1）先删除远程 Git 仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p>（2）再添加远程 Git 仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/wugenqiang/myblog.git</span><br></pre></td></tr></table></figure></p><p>发现问题成功解决。</p><p>切记！！</p><pre><code>如果在GitHub上创建远程仓库时，勾选了 Initialize this repository with a README这项，导致远程仓库不为空，为了不出现Bug，请先执行第6步，若远程仓库为空，则忽略第6步，直接进行第7步操作！</code></pre><h2 id="6-远程仓库合并到本地"><a href="#6-远程仓库合并到本地" class="headerlink" title="6.远程仓库合并到本地"></a>6.远程仓库合并到本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>我就属于创建README.md的一群人，真的是习惯造成的，执行这一步效果如下：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409202006.png" alt></p><h2 id="7-更新远程仓库"><a href="#7-更新远程仓库" class="headerlink" title="7.更新远程仓库"></a>7.更新远程仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409202215.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409200850.png" alt></p><p>如果创建仓库不为空而且不执行第4步直接执行第5步则会出现：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409202447.png" alt></p><h1 id="四、结语"><a href="#四、结语" class="headerlink" title="四、结语"></a>四、结语</h1><p>到现在为止，我们的任务已经完成了。现在可以做到的是，在任何一台电脑上，只需要<code>git clone https://github.com/wugenqiang/myblog.git</code>,即可完成将Hexo源文件复制到本地。（请将后面的<code>https://github.com/wugenqiang/myblog.git</code>替换为自己相应的仓库地址。否则，克隆的将是我的博客源码:)）<br>效果如下：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409205709.png" alt></p><p>在本地编写完博客时，顺次执行实现三步骤中的4、6、7命令，即可完成Hexo博客源文件更新同步，保持Github上的Hexo源码为最新版本。ok，分享就到这里啦，如果觉得这样手动操作有点辛苦的话，可以参考我的另一篇博客：</p><ul><li><a href="https://blog.enjoytoshare.club/article/auto_backup_blog_source_files.html">自动备份Hexo博客源文件</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;自从接触了Hexo+NexT之后，发现离不开了，以后有能力的时候一定重新架构一下，使得更加个性化，最大程度的满足我们对于软件的需求，大家都知道，如果写东西在本地的话，最怕的应该就是更换电脑，还要重新搭建博客了，所以备份对于我们来说特别重要！备份博客就是本篇博客文章的主旨了，一定要攻下这座城堡。&lt;br&gt;我曾经看过Git备份Hexo博客源文件的方式，所以在这里记录一下……&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
      <category term="Git" scheme="https://blog.enjoytoshare.club/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>自动备份Hexo博客源文件</title>
    <link href="https://blog.enjoytoshare.club/article/auto_backup_blog_source_files.html"/>
    <id>https://blog.enjoytoshare.club/article/auto_backup_blog_source_files.html</id>
    <published>2019-04-09T18:15:46.000Z</published>
    <updated>2019-04-09T18:15:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>自从接触了Hexo+NexT之后，发现离不开了，以后有能力的时候一定重新架构一下，使得更加个性化，最大程度的满足我们对于软件的需求，大家都知道，如果写东西在本地的话，最怕的应该就是更换电脑，还要重新搭建博客了，所以备份对于我们来说特别重要！备份博客就是本篇博客文章的主旨了，一定要攻下这座城堡。<br>我曾经看过Git备份Hexo博客源文件的方式，这种方式虽然能够备份Hexo博客的源文件，但是对于我这种懒人，每次更新博文都需要输入两三行重复的Git命令真是一件麻烦的事情。况且指不定哪天就搞忘push到github上了。你说是不是，所以这篇文章出现了……</p><a id="more"></a><h1 id="二、原理"><a href="#二、原理" class="headerlink" title="二、原理"></a>二、原理</h1><p>通过监听Hexo的事件来完成自动执行Git命令进行自动备份，查阅<a href="https://hexo.io/zh-cn/api/events.html" target="_blank" rel="noopener">Hexo文档</a>，找到了Hexo的主要事件，见下表：</p><table><thead><tr><th style="text-align:center">事件名</th><th style="text-align:center">事件发生时间</th></tr></thead><tbody><tr><td style="text-align:center">deployBefore</td><td style="text-align:center">在部署完成前发布</td></tr><tr><td style="text-align:center">deployAfter</td><td style="text-align:center">在部署成功后发布</td></tr><tr><td style="text-align:center">exit</td><td style="text-align:center">在 Hexo 结束前发布</td></tr><tr><td style="text-align:center">generateBefore</td><td style="text-align:center">在静态文件生成前发布</td></tr><tr><td style="text-align:center">generateAfter</td><td style="text-align:center">在静态文件生成后发布</td></tr><tr><td style="text-align:center">new</td><td style="text-align:center">在文章文件建立后发布</td></tr></tbody></table><p>于是我们就可以通过监听Hexo的<code>deployAfter</code>事件，待上传完成之后自动运行Git备份命令，从而达到自动备份的目的。</p><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><h2 id="1-将Hexo目录加入Git仓库"><a href="#1-将Hexo目录加入Git仓库" class="headerlink" title="1.将Hexo目录加入Git仓库"></a>1.将Hexo目录加入Git仓库</h2><p>本脚本需要提前将Hexo加入Git仓库并与Github或者Gitee远程仓库绑定之后，才能正常工作。如果你不知道该怎样进行操作，可以参考我的另一篇博文：</p><ul><li><a href="https://blog.enjoytoshare.club/article/manual_backup_blog_source_files.html">Git命令手动备份Hexo博客源文件</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;自从接触了Hexo+NexT之后，发现离不开了，以后有能力的时候一定重新架构一下，使得更加个性化，最大程度的满足我们对于软件的需求，大家都知道，如果写东西在本地的话，最怕的应该就是更换电脑，还要重新搭建博客了，所以备份对于我们来说特别重要！备份博客就是本篇博客文章的主旨了，一定要攻下这座城堡。&lt;br&gt;我曾经看过Git备份Hexo博客源文件的方式，这种方式虽然能够备份Hexo博客的源文件，但是对于我这种懒人，每次更新博文都需要输入两三行重复的Git命令真是一件麻烦的事情。况且指不定哪天就搞忘push到github上了。你说是不是，所以这篇文章出现了……&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>IDEA通过插件安装Gitee并clone项目</title>
    <link href="https://blog.enjoytoshare.club/article/git_idea_clone.html"/>
    <id>https://blog.enjoytoshare.club/article/git_idea_clone.html</id>
    <published>2019-04-08T18:00:18.000Z</published>
    <updated>2019-04-08T18:00:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>在最新插件版本: 2018.3.1.（2019-01-10 发布）中码云 IDEA 插件已经由gitosc更名为gitee。<br>同时值得注意的是：新版插件gitee菜单已经和git菜单合并。</p><h1 id="二、安装插件"><a href="#二、安装插件" class="headerlink" title="二、安装插件"></a>二、安装插件</h1><h2 id="1-通过“插件管理”安装"><a href="#1-通过“插件管理”安装" class="headerlink" title="1. 通过“插件管理”安装"></a>1. 通过“插件管理”安装</h2><p>启动 IDEA，在启动界面选择菜单Configure-Plugins<br>在弹出的插件市场中搜索关键字Gitee，在搜索结果中找到Gitee插件，点击Install安装插件。<br>重启 IDEA 使插件生效</p><p><img src="https://upload-images.jianshu.io/upload_images/13658123-59f94c533974d0e9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_01.jpg"></p><h2 id="2-通过“首选项-gt-插件”安装"><a href="#2-通过“首选项-gt-插件”安装" class="headerlink" title="2. 通过“首选项-&gt;插件”安装"></a>2. 通过“首选项-&gt;插件”安装</h2><p>启动 IDEA，选择菜单File-Settings打开），选择Plugins<br>在弹出的插件市场中搜索关键字Gitee，在搜索结果中找到Gitee插件，点击Install安装插件。<br>重启 IDEA 使插件生效</p><h1 id="三、登陆并拉取仓库代码"><a href="#三、登陆并拉取仓库代码" class="headerlink" title="三、登陆并拉取仓库代码"></a>三、登陆并拉取仓库代码</h1><h2 id="1-启动-idea，选择VCS-Check-out-from-Version-Control-git"><a href="#1-启动-idea，选择VCS-Check-out-from-Version-Control-git" class="headerlink" title="1. 启动 idea，选择VCS- Check out from Version Control - git"></a>1. 启动 idea，选择VCS- Check out from Version Control - git</h2><p>说明：因为最新版本发生了变更，gitee 选项和 git 已经合并，所以这里选择git</p><p><img src="https://upload-images.jianshu.io/upload_images/13658123-9608b3bcff59ed65.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_02.jpg"></p><h2 id="2-输入登录名和密码绑定gitee"><a href="#2-输入登录名和密码绑定gitee" class="headerlink" title="2. 输入登录名和密码绑定gitee"></a>2. 输入登录名和密码绑定gitee</h2><p><img src="https://upload-images.jianshu.io/upload_images/13658123-6a43e8867916c621.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_03.jpg"></p><p>如图所示：</p><p><img src="https://upload-images.jianshu.io/upload_images/13658123-46f922e60f2eb501.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_04.jpg"></p><h2 id="3-选择仓库进行clone"><a href="#3-选择仓库进行clone" class="headerlink" title="3. 选择仓库进行clone"></a>3. 选择仓库进行clone</h2><p>点击选框中的向下箭头，会显示当前用户在码云上的所有仓库，可选择任意仓库进行 clone</p><p><img src="https://upload-images.jianshu.io/upload_images/13658123-04cbb1593cdfb426.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_05.jpg"></p><h2 id="4-查看效果"><a href="#4-查看效果" class="headerlink" title="4. 查看效果"></a>4. 查看效果</h2><p><img src="https://upload-images.jianshu.io/upload_images/13658123-8a68acf9bae5b7e8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20190408_06.jpg"><br>到这里就算ok了，接下来就可以直接通过IDEA导入项目，然后通过git进行pull和push操作了，在这里我就不做演示了，如有问题可以留言,或者点击右下角和我在线交流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;在最新插件版本: 2018.3.1.（2019-01-10 发布）中码云 IDEA 插件已经由gitosc更名为gitee。
      
    
    </summary>
    
      <category term="Git" scheme="https://blog.enjoytoshare.club/categories/Git/"/>
    
    
      <category term="Gitee" scheme="https://blog.enjoytoshare.club/tags/Gitee/"/>
    
      <category term="IDEA" scheme="https://blog.enjoytoshare.club/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo文章中图片点击实现全屏查看</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-picture-screen.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-picture-screen.html</id>
    <published>2019-04-06T14:10:48.000Z</published>
    <updated>2019-04-06T14:10:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1 写在前面"></a>1 写在前面</h1><p>方法一存在图片放大后不美观，建议直接跳到方法二<br>如果想尝试解决第一种方法出现的Bug，可以尝试一下，然后我们讨论一下，方便的话可以加我QQ：2422676183</p><h1 id="2-方法一"><a href="#2-方法一" class="headerlink" title="2 方法一"></a>2 方法一</h1><h2 id="2-1-修改post-details-js文件"><a href="#2-1-修改post-details-js文件" class="headerlink" title="2.1 修改post-details.js文件"></a>2.1 修改post-details.js文件</h2><p>文件目录：/themes/next/source/js/src/post-details.js<br>在文件最后添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//----自定义js----------------</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createImgEventFullScreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> imgs = $(<span class="string">".post-body"</span>).find(<span class="string">"img"</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(imgs);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; imgs.length;i++) &#123;</span><br><span class="line">    <span class="comment">// $(imgs[i]).click(createCover(imgs[i]));</span></span><br><span class="line">    imgs[i].onclick= <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> src = e.srcElement.currentSrc;</span><br><span class="line">      createCover(src)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">createCover</span> (<span class="params">src</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(src);</span><br><span class="line">    <span class="keyword">var</span> cover = $(<span class="string">"&lt;div id='fullScreenCover' class='zhao-cover-img-container'&gt;&lt;img class='zhao-cover-img' src='"</span>+src+<span class="string">"'/&gt;&lt;/div&gt;"</span>);</span><br><span class="line">    $(<span class="string">"#fullScreenCover"</span>).remove();</span><br><span class="line">    $(<span class="string">"body"</span>).append(cover);</span><br><span class="line">    $(<span class="string">"body"</span>).addClass(<span class="string">"zhao-no-scroll"</span>);</span><br><span class="line">    $(<span class="string">"#fullScreenCover"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      $(<span class="string">"#fullScreenCover"</span>).remove();</span><br><span class="line">      $(<span class="string">"body"</span>).removeClass(<span class="string">"zhao-no-scroll"</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  createImgEventFullScreen();</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h2 id="2-2-修改custom-styl文件"><a href="#2-2-修改custom-styl文件" class="headerlink" title="2.2 修改custom.styl文件"></a>2.2 修改custom.styl文件</h2><p>文件目录：/themes/next/source/css/_custom/custom.styl<br>在文件最后添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.zhao-cover-img-container</span>&#123;</span><br><span class="line"> <span class="attribute">position</span>: fixed;</span><br><span class="line"> <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line"> <span class="attribute">z-index</span>: <span class="number">10002</span>;</span><br><span class="line"> <span class="attribute">text-align</span>: center;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line"> <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.zhao-cover-img</span>&#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">position</span>: absolute;</span><br><span class="line"> <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.zhao-no-scroll</span>&#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line"> <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过还是会存在一个小bug，大图片图片放大时有点不美观<br>如果您知道如何解决可以给我留言，谢谢啦</p><h1 id="3-方法二"><a href="#3-方法二" class="headerlink" title="3 方法二"></a>3 方法二</h1><p>这种方法使用了图片浏览放大功能fancybox插件</p><h2 id="3-1-切换到lib目录"><a href="#3-1-切换到lib目录" class="headerlink" title="3.1 切换到lib目录"></a>3.1 切换到lib目录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd next/source/lib</span><br></pre></td></tr></table></figure><h2 id="3-2-下载插件"><a href="#3-2-下载插件" class="headerlink" title="3.2 下载插件"></a>3.2 下载插件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/theme-next/theme-next-fancybox3 fancybox</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406155520.png" alt></p><h2 id="3-3-更改主题配置文件"><a href="#3-3-更改主题配置文件" class="headerlink" title="3.3 更改主题配置文件"></a>3.3 更改主题配置文件</h2><p>更改next/_config.yml文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fancybox: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="3-4-测试效果"><a href="#3-4-测试效果" class="headerlink" title="3.4 测试效果"></a>3.4 测试效果</h2><p>部署hexo s之后点击图片，如图：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406155801.png" alt></p><p>完美，这种效果我很满意，你觉得呢，还是大神优秀啊~~ 好好学习！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-写在前面&quot;&gt;&lt;a href=&quot;#1-写在前面&quot; class=&quot;headerlink&quot; title=&quot;1 写在前面&quot;&gt;&lt;/a&gt;1 写在前面&lt;/h1&gt;&lt;p&gt;方法一存在图片放大后不美观，建议直接跳到方法二&lt;br&gt;如果想尝试解决第一种方法出现的Bug，可以尝试一下，然
      
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>DaoVoice实现在线联系</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-daovoice.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-daovoice.html</id>
    <published>2019-04-06T10:13:16.000Z</published>
    <updated>2019-04-06T10:13:16.000Z</updated>
    
    <content type="html"><![CDATA[<center>绝佳的用户沟通工具</center><a id="more"></a><h1 id="1-注册登录DaoVoice"><a href="#1-注册登录DaoVoice" class="headerlink" title="1 注册登录DaoVoice"></a>1 注册登录DaoVoice</h1><p>注册登录地址如下:<br><a href="http://www.daovoice.io/" target="_blank" rel="noopener">http://www.daovoice.io/</a><br>官网进行注册,需要邀请码:  b6dbddb6 复制粘贴就可以了~!<br>或者通过下面链接进入：<br><a href="http://dashboard.daovoice.io/get-started?invite_code=b6dbddb6" target="_blank" rel="noopener">http://dashboard.daovoice.io/get-started?invite_code=b6dbddb6</a></p><h1 id="2-复制粘贴代码"><a href="#2-复制粘贴代码" class="headerlink" title="2 复制粘贴代码"></a>2 复制粘贴代码</h1><p>修改的hexo的文件路劲如下: themes/next/layout/_partials/head.swig 添加下面的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.daovoice %&#125;</span><br><span class="line"> &lt;script&gt;(<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">"script"</span>,(<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/b6dbddb6.js"</span>,<span class="string">"daovoice"</span>)</span><br><span class="line"> daovoice(<span class="string">'init'</span>, &#123;</span><br><span class="line">  app_id: <span class="string">"你获取的appid"</span></span><br><span class="line">&#125;);</span><br><span class="line">daovoice(<span class="string">'update'</span>);</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>这段代码从这里找：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406110355.png" alt></p><p>根据你自己的进行修改，参照下图：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406103518.png" alt></p><h1 id="3-修改主题的配置文件"><a href="#3-修改主题的配置文件" class="headerlink" title="3 修改主题的配置文件"></a>3 修改主题的配置文件</h1><p>在主题的配置文件中添加:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">daovoice: <span class="literal">true</span></span><br><span class="line">daovoice_app_id: 我们注册获取的id</span><br></pre></td></tr></table></figure><h1 id="4-重新部署"><a href="#4-重新部署" class="headerlink" title="4 重新部署"></a>4 重新部署</h1><p>输入hexo s部署之后发现DaoVoice官网会提示</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406104400.png" alt></p><p>同时网页右下角出现了DaoVoice的图标</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406104538.png" alt></p><h1 id="5-测试"><a href="#5-测试" class="headerlink" title="5 测试"></a>5 测试</h1><p>输入hello wugenqiang</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406104806.png" alt></p><p>回车键发送，效果如图：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406104855.png" alt></p><p>与此同时，DaoVoice后台也同样收到了信息</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406105018.png" alt></p><p>如果每次都要登录DaoVoice进行回复有些麻烦，所以建议在DaoVocie内绑定微信，然后使用DaoVoice的小程序进行手机上的回复操作就很方便了。</p><p>绑定微信的途径：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190406110140.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;绝佳的用户沟通工具&lt;/center&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
      <category term="DaoVoice" scheme="https://blog.enjoytoshare.club/tags/DaoVoice/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之修改内容区域的宽度</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-edit-screen.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-edit-screen.html</id>
    <published>2019-04-05T23:20:27.000Z</published>
    <updated>2019-04-05T23:20:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-修改内容区域的宽度"><a href="#1-修改内容区域的宽度" class="headerlink" title="1 修改内容区域的宽度"></a>1 修改内容区域的宽度</h1><p>编辑主题的 source/css/_variables/custom.styl  文件，新增变量：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改成你期望的宽度</span></span><br><span class="line">$content-desktop = <span class="number">700</span>px</span><br><span class="line"><span class="comment">// 当视窗超过 1600px 后的宽度</span></span><br><span class="line">$content-desktop-large = <span class="number">1050</span>px</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-修改内容区域的宽度&quot;&gt;&lt;a href=&quot;#1-修改内容区域的宽度&quot; class=&quot;headerlink&quot; title=&quot;1 修改内容区域的宽度&quot;&gt;&lt;/a&gt;1 修改内容区域的宽度&lt;/h1&gt;&lt;p&gt;编辑主题的 source/css/_variables/custom
      
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的NexT主题打赏功能</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-donate.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-donate.html</id>
    <published>2019-04-05T17:37:10.000Z</published>
    <updated>2019-04-05T17:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备支付宝和微信二维码"><a href="#1-准备支付宝和微信二维码" class="headerlink" title="1 准备支付宝和微信二维码"></a>1 准备支付宝和微信二维码</h2><p>首先要生成支付宝和微信收钱二维码</p><h2 id="2-在-config-yml中配置图片"><a href="#2-在-config-yml中配置图片" class="headerlink" title="2 在_config.yml中配置图片"></a>2 在_config.yml中配置图片</h2><p>wechat.jpg、alipay.jpg图片放入themes/next/source/images中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">reward:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  #打赏功能</span><br><span class="line">  comment: 原创技术分享，您的支持将鼓励我继续创作</span><br><span class="line">  wechatpay: <span class="regexp">/images/</span>wechat.jpg</span><br><span class="line">  alipay: <span class="regexp">/images/</span>alipay.jpg</span><br></pre></td></tr></table></figure><p>到目前为止，已经实现了需要的功能，如图所示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405180715.png" alt></p><p>但是出现闪动Bug，所以进行下面的修复</p><h2 id="3-修复闪动Bug"><a href="#3-修复闪动Bug" class="headerlink" title="3 修复闪动Bug"></a>3 修复闪动Bug</h2><p>修改next/source/css/_common/components/post/post-reward.styl，注释掉下面部分即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*注释此部分</span><br><span class="line"><span class="comment">#QR &gt; div:hover p &#123;</span></span><br><span class="line">  animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line">  -webkit-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line">  -moz-animation: roll <span class="number">0.1</span>s infinite linear;</span><br><span class="line">&#125;*/</span><br></pre></td></tr></table></figure><p>好啦，到这里大功告成，完美~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-准备支付宝和微信二维码&quot;&gt;&lt;a href=&quot;#1-准备支付宝和微信二维码&quot; class=&quot;headerlink&quot; title=&quot;1 准备支付宝和微信二维码&quot;&gt;&lt;/a&gt;1 准备支付宝和微信二维码&lt;/h2&gt;&lt;p&gt;首先要生成支付宝和微信收钱二维码&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Coding+Github双服务器托管Hexo</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-server-hosting.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-server-hosting.html</id>
    <published>2019-04-05T09:36:34.000Z</published>
    <updated>2019-04-05T09:36:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1 写在前面"></a>1 写在前面</h1><p>其实之前是用的wordpress在阿里云上挂着。<br>觉得Hexo好像更符合现在我的审美，so, do it! 所以我选择了Hexo</p><h1 id="2-部署优化Hexo"><a href="#2-部署优化Hexo" class="headerlink" title="2 部署优化Hexo"></a>2 部署优化Hexo</h1><p>这一步我之前写过，在这里我就不详细赘述了啊</p><ul><li><a href="https://wugenqiang.github.io/article/hexo-do-optimization.html" target="_blank" rel="noopener">Hexo+NexT拥抱舒爽</a></li></ul><h1 id="3-创建Github公开库"><a href="#3-创建Github公开库" class="headerlink" title="3 创建Github公开库"></a>3 创建Github公开库</h1><ul><li><a href="https://blog.csdn.net/wugenqiang/article/details/88373385" target="_blank" rel="noopener">Hexo博客上传至Github</a></li></ul><h1 id="4-创建Coding公开库"><a href="#4-创建Coding公开库" class="headerlink" title="4 创建Coding公开库"></a>4 创建Coding公开库</h1><p>创建腾讯云开发者平台（或Coding）公开库，因为目前两家公司战略合作，现在共用了。<br><a href="https://dev.tencent.com/" target="_blank" rel="noopener">https://dev.tencent.com/</a></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405095056.png" alt></p><h2 id="4-1-创建项目"><a href="#4-1-创建项目" class="headerlink" title="4.1 创建项目"></a>4.1 创建项目</h2><p>项目地址格式是 username.coding.me，格式不对会404哦，项目名称随便，确定就ok<br>例如我的：<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405095539.png" alt></p><h2 id="4-2-开启page服务"><a href="#4-2-开启page服务" class="headerlink" title="4.2 开启page服务"></a>4.2 开启page服务</h2><p>创建完记得进入代码浏览，看看是否正确生成，然后进入page服务，然后开启<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405095901.png" alt><br>开启成功效果图：<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405100027.png" alt></p><h1 id="5-配置服务并将文件部署到Github"><a href="#5-配置服务并将文件部署到Github" class="headerlink" title="5 配置服务并将文件部署到Github"></a>5 配置服务并将文件部署到Github</h1><h2 id="5-1-修改-config-yml"><a href="#5-1-修改-config-yml" class="headerlink" title="5.1 修改_config.yml"></a>5.1 修改_config.yml</h2><p>修改Hexo根目录下 _config.yml 文件，找到最下面的 deploy，格式类似我这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  #repository: https://github.com/wugenqiang/wugenqiang.github.io.git #复制过来</span><br><span class="line">  #branch: master</span><br><span class="line">  repo:</span><br><span class="line">    github: https://github.com/wugenqiang/wugenqiang.github.io.git,master</span><br><span class="line">    coding: https://dev.tencent.com/u/wugenqiang/p/wugenqiang.coding.me.git,master</span><br></pre></td></tr></table></figure><h2 id="5-2-生成静态文件发布"><a href="#5-2-生成静态文件发布" class="headerlink" title="5.2 生成静态文件发布"></a>5.2 生成静态文件发布</h2><p>执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 清除缓存，生成静态文件，本地发布<br>页面上没问题的话，就可以执行hexo d</p><p>会弹出输入github账号密码，和腾讯开发者平台的账号密码。<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405100903.png" alt><br>后面通过生成ssh私钥，公钥就不用频繁输入用户名密码</p><p>部署成功，按照各自平台的pages服务提示的网址即可访问<br>在这里我就演示coding的吧，嘿嘿<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405101028.png" alt></p><h1 id="6-预览地址"><a href="#6-预览地址" class="headerlink" title="6 预览地址"></a>6 预览地址</h1><ul><li><a href="http://wugenqiang.coding.me/" target="_blank" rel="noopener">http://wugenqiang.coding.me/</a></li><li><a href="https://wugenqiang.github.io/" target="_blank" rel="noopener">https://wugenqiang.github.io/</a></li></ul><h1 id="7-设置自定义域名"><a href="#7-设置自定义域名" class="headerlink" title="7 设置自定义域名"></a>7 设置自定义域名</h1><p>对于Github来说，可参考：</p><ul><li><a href="https://wugenqiang.github.io/article/hexo-do-domain.html" target="_blank" rel="noopener">Hexo博客绑定个人域名</a></li></ul><p>对于Coding来说，来进行下面步骤：<br>1.进入项目，进入Page服务页<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405103203.png" alt></p><p>点击设置进入</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405103257.png" alt></p><p>2.设置域名指向<br>设置自定义域名指向wugenqiang.coding.me</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405103808.png" alt></p><p>ok<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405104001.png" alt></p><h1 id="8-加快访问速度"><a href="#8-加快访问速度" class="headerlink" title="8 加快访问速度"></a>8 加快访问速度</h1><p>修改解析记录，点击 修改，然后将github解析线路改成海外，然后保存，这样国外的用户访问你的博客的话会跳转到你的github的页面。国内默认coding.me，加快访问速度，欧耶</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190405113112.png" alt></p><p>来访问试试吧，嘿嘿嘿 <a href="https://blog.enjoytoshare.club/">死命点我吧，亲</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-写在前面&quot;&gt;&lt;a href=&quot;#1-写在前面&quot; class=&quot;headerlink&quot; title=&quot;1 写在前面&quot;&gt;&lt;/a&gt;1 写在前面&lt;/h1&gt;&lt;p&gt;其实之前是用的wordpress在阿里云上挂着。&lt;br&gt;觉得Hexo好像更符合现在我的审美，so, do i
      
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客自定义域名开启HTTPS</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-https.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-https.html</id>
    <published>2019-04-04T16:44:18.000Z</published>
    <updated>2019-04-04T16:44:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub官方曾经宣布，GitHub Pages的自定义域名获得对HTTPS的支持。</p><a id="more"></a><p>自己博客没有启用HTTPS，看到消息后，就想着折腾下吧。其实，很简单的，对着官方教程一步步来就可以了。</p><p>首先，打开仓库的Settings，找到GitHub Pages项，有一个Enforce HTTPS，在前面的框打上钩就可以了。<br>完成后，博客就全站支持HTTPS了。</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404165057.png" alt></p><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404165246.png" alt></p><p>但是爆红就让人心态不好了，所以下面使用Netlify来优化https方案</p><p>Netlify (推荐)</p><ul><li>可以使用 CLI 上传代码</li><li>支持自定义域名且自定义域名支持一键开启 https（证书来自 Let’s Encrype）</li><li>支持强制让用户通过 https 访问网站（开启后此功能后，http 的访问一律会 301 跳转到 https</li><li>支持自动构建</li><li>支持重定向（Redirects）和重写（Rewrites）功能</li><li>数据通过 HTTP2 协议传输</li><li>提供 webhooks 与 API</li></ul><h1 id="1-Netlify"><a href="#1-Netlify" class="headerlink" title="1 Netlify"></a>1 Netlify</h1><p>Netlify是一家专注于提供静态网站托管服务的公司，通过自己的内容分发网络，将提前建立好的静态页面呈献给访客，节约了加载的时间。</p><h2 id="1-1-部署网站"><a href="#1-1-部署网站" class="headerlink" title="1.1 部署网站"></a>1.1 部署网站</h2><p>首先去 Netlify 注册账号登录（<a href="https://www.netlify.com/）" target="_blank" rel="noopener">https://www.netlify.com/）</a></p><p>接着点击页面右上角的 New site from Git</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404170805.png" alt></p><p>这里选择的 GitHub ,别忘记勾选访问公共仓库选项.之后授权给 Netlify 指定Repository,然后 Deploy</p><p>设置自定义域名<br>点击 Domain settings 然后点击 Add custom domain.</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404171035.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404171134.png" alt></p><p>然后到域名解析处,修改域名CNAME记录,记录值就是设置完域名页面显示的配置值</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404172505.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404172429.png" alt></p><h2 id="1-2-添加SSL证书"><a href="#1-2-添加SSL证书" class="headerlink" title="1.2 添加SSL证书"></a>1.2 添加SSL证书</h2><p>设置完成域名绑定后,设置中心选项有所变化 , 点击</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404173233.png" alt></p><p>至此配置完成</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404173821.png" alt></p><p>效果显示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404174519.png" alt></p><p>完美~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub官方曾经宣布，GitHub Pages的自定义域名获得对HTTPS的支持。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
      <category term="域名" scheme="https://blog.enjoytoshare.club/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="Https" scheme="https://blog.enjoytoshare.club/tags/Https/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客绑定个人域名</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-domain.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-domain.html</id>
    <published>2019-04-04T15:47:54.000Z</published>
    <updated>2019-04-04T15:47:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间用hexo搭建的gitpage个人博客，域名默认也是 github 下的二级域名：username.github.io,<br>现在为了提升格调准备将自己的博客指向一个新的域名。<br><a id="more"></a></p><p>下面来记录下过程。</p><h1 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1 购买域名"></a>1 购买域名</h1><p>如果想要免费的域名，可以到下面网址购买：<a href="http://www.dot.tk/en/index.html?lang=en" target="_blank" rel="noopener">http://www.dot.tk/en/index.html?lang=en</a><br>当然，如果有条件，最好到阿里云或者腾讯云等地方购买域名，听说1元优惠域名还是很多的</p><h1 id="2-域名解析"><a href="#2-域名解析" class="headerlink" title="2 域名解析"></a>2 域名解析</h1><p>首先获取自己 github 的二级域名的 IP地址，windows 下直接在 cmd 里 Ping 一下自己的博客就会得到 IP 地址：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404155814.png" alt></p><p>我的ip是185.199.111.153<br>下面通过 DNS域名解析将购买的域名指向 github 的二级域名：username.github.io，<br>我的是在腾讯云购买的1元用一年的，<br>进入腾讯云的管理控制台-域名与网站-云解析 DNS，进入域名的解析设置，点击新手指导，将得到的 IP 地址填到记录值一栏，点击确定就 OK 了。填完以后的解析列表会出现：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404162502.png" alt></p><p>记录值就是自己 github 的二级域名的 IP地址。</p><h1 id="3-设置CNAME"><a href="#3-设置CNAME" class="headerlink" title="3 设置CNAME"></a>3 设置CNAME</h1><p>在 hexo 项目下，source 文件夹下面创建 CNAME 文件（没有后缀名的），在里面写上购买的域名。比如：<br>blog.enjoytoshare.club</p><p>在 github 上面，打开 username.github.io 项目的（Settings）设置，然后在 GitHub Pages的 Custom domain设置里填上购买的域名。比如：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404162901.png" alt></p><p>好了，新域名配置完成，可以访问了。</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404163631.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间用hexo搭建的gitpage个人博客，域名默认也是 github 下的二级域名：username.github.io,&lt;br&gt;现在为了提升格调准备将自己的博客指向一个新的域名。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
      <category term="域名" scheme="https://blog.enjoytoshare.club/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>英语知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/english-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/english-arrangement.html</id>
    <published>2019-04-02T10:49:43.000Z</published>
    <updated>2019-04-02T10:49:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>222</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;222&lt;/p&gt;

      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研英语" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研英语" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>概率论与数理统计知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/probability-theory-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/probability-theory-arrangement.html</id>
    <published>2019-04-02T10:49:14.000Z</published>
    <updated>2019-04-02T10:49:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>111</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;111&lt;/p&gt;

      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>线性代数知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/linear-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/linear-arrangement.html</id>
    <published>2019-04-02T10:48:51.000Z</published>
    <updated>2019-04-02T10:48:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>111</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;111&lt;/p&gt;

      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>高等数学知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/advanced-mathematics-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/advanced-mathematics-arrangement.html</id>
    <published>2019-04-02T10:47:34.000Z</published>
    <updated>2019-04-02T10:47:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>111</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;111&lt;/p&gt;

      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研数学" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>近现代史知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/modern-history-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/modern-history-arrangement.html</id>
    <published>2019-04-02T10:30:37.000Z</published>
    <updated>2019-04-02T10:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>hello</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hello&lt;/p&gt;

      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研政治" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研政治" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+NexT搭建博客拥抱舒爽</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-optimization.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-optimization.html</id>
    <published>2019-03-31T19:01:35.000Z</published>
    <updated>2019-04-09T13:35:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404142303.png" alt></p><a id="more"></a><h1 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1 写在前面"></a>1 写在前面</h1><p>本文主要是Hexo+NexT搭建博客并且进行主题的配置以及页面的样式优化</p><p>本篇文档参考了许多大佬的文章以及配置文件，在此感谢大佬们。</p><p>本文参考的文章都会直接给出原文链接或者以注脚的形式标记出处，如有遗漏，欢迎指出。</p><p>本文内容会在后续的优化中慢慢补充完整~~</p><p>首先在配置Hexo+NexT之前，最好阅读一下<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a>和<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT使用文档</a></p><h1 id="2-博客安装和配置"><a href="#2-博客安装和配置" class="headerlink" title="2 博客安装和配置"></a>2 博客安装和配置</h1><pre><code>参考博客：</code></pre><ul><li><p><a href="https://blog.csdn.net/wugenqiang/article/details/88372848" target="_blank" rel="noopener">Windows下部署安装Hexo</a></p></li><li><p><a href="https://blog.csdn.net/wugenqiang/article/details/88373085" target="_blank" rel="noopener">创建Hexo项目</a></p></li><li><p><a href="https://blog.csdn.net/wugenqiang/article/details/88373385" target="_blank" rel="noopener">Hexo博客上传至Github</a></p></li><li><p><a href="https://blog.csdn.net/wugenqiang/article/details/88373990" target="_blank" rel="noopener">使用NexT主题优化Hexo博客</a></p></li></ul><h1 id="3-NexT主题优化"><a href="#3-NexT主题优化" class="headerlink" title="3 NexT主题优化"></a>3 NexT主题优化</h1><h2 id="3-1-修改文章底部-为图标"><a href="#3-1-修改文章底部-为图标" class="headerlink" title="3.1 修改文章底部#为图标"></a>3.1 修改文章底部#为图标</h2><p>修改模板/themes/next/layout/_macro/post.swig，</p><p>搜索 rel=”tag”&gt;#，将 # 换成 <i class="fa fa-envira"></i></p><p>效果如下图所示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331200159.png" alt></p><h2 id="3-2-点击出现爱心效果"><a href="#3-2-点击出现爱心效果" class="headerlink" title="3.2 点击出现爱心效果"></a>3.2 点击出现爱心效果</h2><p>在/themes/next/source/js/love.js下新建文件love.js，接着把该链接下的代码拷贝粘贴到love.js文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function (e, t, a) &#123; function n() &#123; c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++)d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y-- , d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;); requestAnimationFrame(r) &#125; function o() &#123; var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement(&quot;div&quot;); a.className = &quot;heart&quot;, d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement(&quot;style&quot;); a.type = &quot;text/css&quot;; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a) &#125; function s() &#123; return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n() &#125;(window, document);</span><br></pre></td></tr></table></figure><p>在\themes\next\layout_layout.swig文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>效果如下图所示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331200832.png" alt></p><h2 id="3-3-文章加密访问"><a href="#3-3-文章加密访问" class="headerlink" title="3.3 文章加密访问"></a>3.3 文章加密访问</h2><p>打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head-unique.swig文件,插入这样一段代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入查看密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码不正确,请询问主编大大！&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后在文章上写成类似这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo+NexT拥抱舒爽</span><br><span class="line">tags:</span><br><span class="line">  - Hexo</span><br><span class="line">  - NexT</span><br><span class="line">categories:</span><br><span class="line">  - Hexo</span><br><span class="line">author: WuGenQiang</span><br><span class="line">password: 123456</span><br><span class="line">date: 2019-03-31 19:01:35</span><br><span class="line">updated: 2019-03-31 19:01:35</span><br></pre></td></tr></table></figure><p>效果如图所示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331210050.png" alt></p><h2 id="3-4-优化深色代码高亮背景"><a href="#3-4-优化深色代码高亮背景" class="headerlink" title="3.4 优化深色代码高亮背景"></a>3.4 优化深色代码高亮背景</h2><p>在主题配置文件修改代码高亮背景为深色背景后，当在博客文章上选择代码时，选择到的颜色也为深色，虽然和背景色还是有点点区别，但是不好区分。所以经过一番研究，才有了以下优化教程。</p><p>在myblog/themes/next/source/css/_custom/custom.styl中添加以下样式代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//page code background-color</span><br><span class="line">.code ::selection &#123;</span><br><span class="line">    background: #2593a6;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//gitalk code background-color </span><br><span class="line">.gt-container .gt-comment-content .highlight pre, .markdown-body pre&#123;</span><br><span class="line">    background-color: #2d2d2d;</span><br><span class="line">&#125;</span><br><span class="line">.gt-container .gt-comment-content .highlight ::selection &#123;</span><br><span class="line">    background: #2593a6;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码优化了所以高亮代码区域，包括gitalk评论区的高亮代码。 这些样式代码是通过浏览器调试而得，如有其它样式的需求，可参考本示例在浏览器中调试。</p><h2 id="3-5-解决NexT主题访问慢"><a href="#3-5-解决NexT主题访问慢" class="headerlink" title="3.5 解决NexT主题访问慢"></a>3.5 解决NexT主题访问慢</h2><p>当博客使用Hexo搭建在Github Page上的时候，可能会访问慢，有一个原因是因为fonts.googleapis.com加载极慢，所以Google了一下，发现了解决方案。<br>把在NexT主题的配置文件<code>_config.yml</code>里面的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  # 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span><br><span class="line">  host:</span><br></pre></td></tr></table></figure></p><p>改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line">  # 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span><br><span class="line">  # Uri of fonts host. E.g. //fonts.googleapis.com (Default)</span><br><span class="line">  # fonts.lug.ustc.edu.cn是中科大的源,解决Hexo NexT主题访问慢</span><br><span class="line">  host: //fonts.lug.ustc.edu.cn</span><br></pre></td></tr></table></figure></p><p>访问速度就很快了！哦耶，当然如果你有更好的解决办法也可以提啊<br>还有一种方法就是采用Coding+Github双服务器托管Hexo博客，这样访问速度会更快！<br>如果想进行这样的操作，可以参考我的文章：<a href="https://blog.enjoytoshare.club/article/hexo-do-server-hosting.html">Coding+Github双服务器托管Hexo</a></p><h1 id="4-SEO推广"><a href="#4-SEO推广" class="headerlink" title="4 SEO推广"></a>4 SEO推广</h1><p>刚搭建完博客，可能你会发现你发表的文章在谷歌或者百度都搜索不到，因为需要进行SEO优化的，什么是SEO，顾名思义，SEO即(Search Engine Optimization):汉译为搜索引擎优化，下面来总结一下SEO优化的方法，让自己的博文能在谷歌百度上搜索到。</p><h2 id="4-1-生成sitemap"><a href="#4-1-生成sitemap" class="headerlink" title="4.1 生成sitemap"></a>4.1 生成sitemap</h2><p>添加站点地图sitemap<br>Sitemap用于通知搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。<br>安装sitemap站点地图自动生成插件<code>hexo-generator-sitemap</code>和<code>hexo-generator-baidu-sitemap</code>，用于生成<code>sitemap</code>,在<code>git Bash</code>中执行以下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><p>修改站点配置文件<br>将sitemap文件添加到站点配置文件<code>_config.yml</code>中，并修改url字段的值，其值默认为<a href="http://yoursite.com。" target="_blank" rel="noopener">http://yoursite.com。</a><br>在站点配置文件 <code>_config.yml</code>中添加如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">  </span><br><span class="line">url: https://blog.enjoytoshare.club</span><br></pre></td></tr></table></figure></p><p>配置好后，执行hexo g 就能在网站根目录(public目录)中生成sitemap.xml 和 baidusitemap.xml了;其中第一个是一会要提交给google的，后面那个看名字当然就是提交给Baidu的了；</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409142957.png" alt></p><h2 id="4-2-添加蜘蛛协议"><a href="#4-2-添加蜘蛛协议" class="headerlink" title="4.2 添加蜘蛛协议"></a>4.2 添加蜘蛛协议</h2><p>网站通过<code>Robots协议</code>告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。<code>robots.txt</code> 通常存放于网站根目录(public目录)。由于我们每次hexo clean都会清空public，着实不方便，我们都知道source目录下的文件通过hexo g命令会转换成public中的文件，所以为了方便起见，我们把<code>robots.txt</code>文件放在<code>source</code>目录下，我的 robots.txt 内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /tags/</span><br><span class="line">Allow: /notes/</span><br><span class="line">Allow: /love/</span><br><span class="line">Allow: /page/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line">Sitemap: https://blog.enjoytoshare.club/sitemap.xml</span><br><span class="line">Sitemap: https://blog.enjoytoshare.club/baidusitemap.xml</span><br></pre></td></tr></table></figure></p><p>其中Allow后面的就是你的menu<br>请自行将blog.enjoytoshare.club改成自己的域名，然后hexo g提交一下</p><h2 id="4-3-打开SEO"><a href="#4-3-打开SEO" class="headerlink" title="4.3 打开SEO"></a>4.3 打开SEO</h2><p>在主题配置文件<code>_config.yml</code>中找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seo: false</span><br></pre></td></tr></table></figure><p>将其设置为<code>true</code></p><h2 id="4-4-提交站点到百度"><a href="#4-4-提交站点到百度" class="headerlink" title="4.4 提交站点到百度"></a>4.4 提交站点到百度</h2><h3 id="4-4-1-开启百度自动推送"><a href="#4-4-1-开启百度自动推送" class="headerlink" title="4.4.1 开启百度自动推送"></a>4.4.1 开启百度自动推送</h3><p>在主题配置文件<code>_config.yml</code>中添加如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baidu_push: true</span><br></pre></td></tr></table></figure></p><h3 id="4-4-2-将网站链接提交到百度"><a href="#4-4-2-将网站链接提交到百度" class="headerlink" title="4.4.2 将网站链接提交到百度"></a>4.4.2 将网站链接提交到百度</h3><p><a href="http://www.sousuoyinqingtijiao.com/baidu/tijiao/" target="_blank" rel="noopener">百度搜索引擎非验证提交入口</a><br><a href="https://ziyuan.baidu.com/site/siteadd" target="_blank" rel="noopener">正式提交入口</a></p><p>正式提交需要验证，有三种验证方式，我选择Html标签验证，在themes\next\layout \ _partials\head.swing中添加验证代码(根据你实际验证代码来决定这里写什么)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;baidu-site-verification&quot; content=&quot;s8Pe1TBqyy&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>然后点击完成验证，通过即可。</p><h3 id="4-4-3-登录百度站长平台"><a href="#4-4-3-登录百度站长平台" class="headerlink" title="4.4.3 登录百度站长平台"></a>4.4.3 登录<a href="https://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">百度站长平台</a></h3><p>进行链接提交<br>添加：<br><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409154624.png" alt></p><p>出现这个即成功：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409154650.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409154938.png" alt></p><h2 id="4-5-提交站点到Google"><a href="#4-5-提交站点到Google" class="headerlink" title="4.5 提交站点到Google"></a>4.5 提交站点到Google</h2><p>首先保证你要能翻墙出去，连到谷歌，如果没有VPN，可参考下面网址获取：<a href="https://blog.enjoytoshare.club/laboratory/toolBox/index.html">工具盒子</a></p><h3 id="4-5-1-提交博客域名"><a href="#4-5-1-提交博客域名" class="headerlink" title="4.5.1 提交博客域名"></a>4.5.1 提交博客域名</h3><p>打开<a href="https://www.google.com/webmasters/#?modal_active=none" target="_blank" rel="noopener">Google Search Console</a><br>根据提示注册好之后，添加你的博客域名。</p><h3 id="4-5-2-进行站点验证"><a href="#4-5-2-进行站点验证" class="headerlink" title="4.5.2 进行站点验证"></a>4.5.2 进行站点验证</h3><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409150421.png" alt><br>我选择了备用方法中的HTML 标记，将给出的元标记复制到\themes\next\layout\ _partials \head\head.swig文件中。</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409150235.png" alt></p><p>添加后运行hexo d -g将改动提交。稍后就可以验证成功了。</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409150748.png" alt></p><h3 id="4-5-3-提交站点地图"><a href="#4-5-3-提交站点地图" class="headerlink" title="4.5.3 提交站点地图"></a>4.5.3 提交站点地图</h3><p>还记得我们刚才创建创建sitemap.xml文件吧,现在它要派上用场了。点击左侧工具栏的站点地图</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409151250.png" alt></p><p>提交成功会提示：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409151459.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409151735.png" alt></p><h2 id="4-6-验证站点是否被收录"><a href="#4-6-验证站点是否被收录" class="headerlink" title="4.6 验证站点是否被收录"></a>4.6 验证站点是否被收录</h2><p>在搜索引擎搜索框输入<code>site:your.domain</code>可以查看域名是否被该搜索引擎收录，用户可以使用各大搜索引擎站长工具提交个人博客网址。</p><h3 id="4-6-1-验证谷歌收录"><a href="#4-6-1-验证谷歌收录" class="headerlink" title="4.6.1 验证谷歌收录"></a>4.6.1 验证谷歌收录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:blog.enjoytoshare.club</span><br></pre></td></tr></table></figure><p>域名换成你自己的，谷歌是一定支持的，不过你需要翻墙VPN！如果没有，可参考下面网址获取：<a href="https://blog.enjoytoshare.club/laboratory/toolBox/index.html">工具盒子</a>，如果没有找到你的博客说明没有被收录！<br>成功收录会如下图一样：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409165959.png" alt></p><h3 id="4-6-2-验证百度收录"><a href="#4-6-2-验证百度收录" class="headerlink" title="4.6.2 验证百度收录"></a>4.6.2 验证百度收录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:blog.enjoytoshare.club</span><br></pre></td></tr></table></figure><p>域名换成你自己的，如果没有找到你的博客说明没有被收录！<br>百度收录是真的需要时间，你看下图还没收录：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190409170617.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190404142303.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.enjoytoshare.club/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://blog.enjoytoshare.club/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>PicGo+GitHub图床，让Markdown飞起</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-optimization-picture.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-optimization-picture.html</id>
    <published>2019-03-31T16:37:53.000Z</published>
    <updated>2019-03-31T16:37:53.000Z</updated>
    
    <content type="html"><![CDATA[<center>PicGo+GitHub图床，让Markdown飞起</center><a id="more"></a><h1 id="1-PicGo介绍"><a href="#1-PicGo介绍" class="headerlink" title="1 PicGo介绍"></a>1 PicGo介绍</h1><p>这是一款图片上传的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，GitHub等图床，未来将支持更多图床。</p><p>所以解决问题的思路就是，将本地的文件，或者剪切板上面的截图发送图床，然后生成在线图片的链接，这样就可以</p><p>让Markdown文档飞起来了，走到哪就可以用到哪~~</p><p>在众多的图床中，我选择的GitHub图床，其它类型的图床如果你们有兴趣的话可以试一下，主要我对于Github有特殊的感</p><p>情，很难割舍~~</p><h1 id="2-下载PicGo"><a href="#2-下载PicGo" class="headerlink" title="2 下载PicGo"></a>2 下载PicGo</h1><h2 id="2-1-进入下载链接"><a href="#2-1-进入下载链接" class="headerlink" title="2.1 进入下载链接"></a>2.1 进入下载链接</h2><p>下载链接为：<a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.0.5" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases/tag/v2.0.5</a></p><h2 id="2-2-选择安装包下载"><a href="#2-2-选择安装包下载" class="headerlink" title="2.2 选择安装包下载"></a>2.2 选择安装包下载</h2><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331164455.png" alt></p><h2 id="2-3-安装软件包"><a href="#2-3-安装软件包" class="headerlink" title="2.3 安装软件包"></a>2.3 安装软件包</h2><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331164603.png" alt></p><h1 id="3-创建GitHub图床"><a href="#3-创建GitHub图床" class="headerlink" title="3 创建GitHub图床"></a>3 创建GitHub图床</h1><h2 id="3-1-需要注册-登陆GitHub账号"><a href="#3-1-需要注册-登陆GitHub账号" class="headerlink" title="3.1 需要注册/登陆GitHub账号"></a>3.1 需要注册/登陆GitHub账号</h2><blockquote><p>已经有了自行跳过这一步</p></blockquote><blockquote><p>申请GitHub账号很简单，我就不演示了</p></blockquote><h2 id="3-2-创建Repository"><a href="#3-2-创建Repository" class="headerlink" title="3.2 创建Repository"></a>3.2 创建Repository</h2><p>随便命名，我的比较简单，直接是picGo</p><h2 id="3-3-生成Token"><a href="#3-3-生成Token" class="headerlink" title="3.3 生成Token"></a>3.3 生成Token</h2><p>生成一个Token用于操作GitHub repository</p><p>Settings -&gt; Developer settings -&gt; Personal access tokens </p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331165930.png" alt></p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331170203.png" alt></p><p>然后确定提交，复制生成一串字符 token，这个 token 只出现一次，所以要保存一下。</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331170410.png" alt></p><h1 id="4-配置PicGo客户端"><a href="#4-配置PicGo客户端" class="headerlink" title="4 配置PicGo客户端"></a>4 配置PicGo客户端</h1><p>如下图配置：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331170716.png" alt></p><p>说明：</p><ul><li>仓库名 即你的仓库名</li><li>分支名 默认 master</li><li>Token 就是刚刚复制的那一串字符</li><li>存储路径 这个可以填也可以不填，填了的话图片就上传到这个文件夹</li><li>域名 这个要改一下 格式： <a href="https://raw.githubusercontent.com/[仓库名]/master" target="_blank" rel="noopener">https://raw.githubusercontent.com/[仓库名]/master</a></li></ul><p>然后点确定就OK了，不妨试试。</p><h1 id="5-小结一下"><a href="#5-小结一下" class="headerlink" title="5 小结一下"></a>5 小结一下</h1><p>PicGo是一个不错的软件，真的很好使用，虽然我只用了两天，但是我爱不释手，我之前自己写过图床，但是需要有自己的</p><p>云服务器才可访问，所以我自己上网查资料，找到了这个好用的图床工具。</p><p>上面的步骤都设置好之后，就可以让自己的Markdown文档飞起来了，来试试吧~~</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;PicGo+GitHub图床，让Markdown飞起&lt;/center&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://blog.enjoytoshare.club/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://blog.enjoytoshare.club/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo中Markdown语法(GFM)使用</title>
    <link href="https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html"/>
    <id>https://blog.enjoytoshare.club/article/hexo-do-optimization-markdown.html</id>
    <published>2019-03-31T14:32:26.000Z</published>
    <updated>2019-04-09T12:27:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img width="272px" src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg"></p><a id="more"></a><p>提起Markdown，对我来说是毕设、是项目、是不可多得的助手。<br><a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 是一种轻量级的”标记语言”，优点在于<br>（1）可以更加专注文章内容而不是排版样式。<br>（2）轻松的导出 HTML 和本身的 .md 文件。<br>（3）纯文本内容，兼容所有的文本编辑器与字处理软件。<br>（4）可读，直观。适合所有人的写作语言。<br>查资料了解到，Hexo下使用的MarkDown为Github的<a href="https://help.github.com/en/categories/writing-on-github" target="_blank" rel="noopener">GFM</a>，风格很漂亮，简洁美观大方。但是GFM 的MarkDown语法和标准的MarkDown稍有不同，使用过程中需要注意一些，在下面的介绍中我会进行说明的请放心。</p><h1 id="1-基础语法"><a href="#1-基础语法" class="headerlink" title="1 基础语法"></a>1 基础语法</h1><h2 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h2><p>Markdown支持6种级别的标题，对应html标签 h1 ~ h6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># h1   //一级标题 对应 &lt;h1&gt; &lt;/h1&gt;</span><br><span class="line">## h2   //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;</span><br><span class="line">### h3  //三级标题 对应 &lt;h3&gt; &lt;/h3&gt;</span><br><span class="line">#### h4  //四级标题 对应 &lt;h4&gt; &lt;/h4&gt;</span><br><span class="line">##### h5  //五级标题 对应 &lt;h5&gt; &lt;/h5&gt;</span><br><span class="line">###### h6  //六级标题 对应 &lt;h6&gt; &lt;/h6&gt;</span><br></pre></td></tr></table></figure><h2 id="1-2-段落及区块引用"><a href="#1-2-段落及区块引用" class="headerlink" title="1.2 段落及区块引用"></a>1.2 段落及区块引用</h2><p>Markdown提供了一个特殊符号 &gt; 用于段首进行强调，被强调的文字部分将会高亮显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这段文字将会被高亮显示...</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190331144721.png" alt></p><h2 id="1-3-插入链接或图片"><a href="#1-3-插入链接或图片" class="headerlink" title="1.3 插入链接或图片"></a>1.3 插入链接或图片</h2><p>Markdown针对链接和图片的处理也比较简单，可以使用下面的语法进行标记</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[点击跳转至百度](https://www.baidu.com)</span><br><span class="line">![图片](https://upload-images.jianshu.io/upload_images/703764-605e3cc2ecb664f6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><a href="https://www.baidu.com" target="_blank" rel="noopener">点击跳转至百度</a><br><img src="https://upload-images.jianshu.io/upload_images/703764-605e3cc2ecb664f6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"></p><p>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p><h2 id="1-4-列表"><a href="#1-4-列表" class="headerlink" title="1.4 列表"></a>1.4 列表</h2><p>Markdown支持有序列表和无序列表两种形式：</p><ul><li><p>无序列表使用 * 或 + 或 - 标识</p></li><li><p>有序列表使用数字加 . 标识，例如：1.</p></li></ul><h2 id="1-5-分隔线"><a href="#1-5-分隔线" class="headerlink" title="1.5 分隔线"></a>1.5 分隔线</h2><p>有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><hr><hr><h2 id="1-6-内容强调"><a href="#1-6-内容强调" class="headerlink" title="1.6 内容强调"></a>1.6 内容强调</h2><p>有时候，我们对某一部分文字进行强调，使用 * 或 _ 包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*这里是斜体*</span><br><span class="line">_这里是斜体_</span><br><span class="line"></span><br><span class="line">**这里是加粗**</span><br><span class="line">__这里是加粗__</span><br><span class="line"></span><br><span class="line">***这里是加粗并斜体***</span><br><span class="line">___这里是加粗并斜体___</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p><em>这里是斜体</em><br><em>这里是斜体</em></p><p><strong>这里是加粗</strong><br><strong>这里是加粗</strong></p><p><strong><em>这里是加粗并斜体</em></strong><br><strong><em>这里是加粗并斜体</em></strong></p><h2 id="1-7-删除线"><a href="#1-7-删除线" class="headerlink" title="1.7 删除线"></a>1.7 删除线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这样来 ~~删除一段文本~~</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>这样来 <del>删除一段文本</del></p><h2 id="1-8-高亮显示"><a href="#1-8-高亮显示" class="headerlink" title="1.8 高亮显示"></a>1.8 高亮显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用&lt;code&gt;\`&lt;/code&gt;来强调字符//想打出 ` (反引号)需要转义，加&lt;code&gt;&lt;/code&gt;标签强调</span><br><span class="line">比如`突出背景色`来显示强调效果</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><p>使用<code>`</code>来强调字符<br>比如 <code>突出背景色</code> 来显示强调效果</p><h2 id="1-9-嵌套引用"><a href="#1-9-嵌套引用" class="headerlink" title="1.9 嵌套引用"></a>1.9 嵌套引用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; 动物</span><br><span class="line">&gt;&gt; 水生动物</span><br><span class="line">&gt;&gt; 陆生动物</span><br><span class="line">&gt;&gt;&gt; 猴子</span><br><span class="line">&gt;&gt;&gt; 人</span><br><span class="line">&gt;&gt;&gt;&gt; 程序猿</span><br><span class="line">&gt;&gt;&gt;&gt; 攻城狮</span><br><span class="line">&gt;&gt;产品狗 <span class="comment">//这里需要注意，没有空行间隔，忽略降级引用标记</span></span><br><span class="line">射鸡虱   <span class="comment">//这里需要注意，没有空行间隔，忽略降级引用标记</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; 两栖类动物</span><br><span class="line">&gt;&gt;&gt; 大鳄鱼</span><br><span class="line">唐老鸭</span><br><span class="line"></span><br><span class="line">两个回车结束引用,不在引用范围内了！</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><blockquote><p>动物</p><blockquote><p>水生动物<br>陆生动物</p><blockquote><p>猴子<br>人</p><blockquote><p>程序猿<br>攻城狮<br>产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记<br>射鸡虱   //这里需要注意，没有空行间隔，忽略降级引用标记</p></blockquote></blockquote></blockquote></blockquote><blockquote><blockquote><p>两栖类动物</p><blockquote><p>大鳄鱼<br>唐老鸭</p></blockquote></blockquote></blockquote><p>两个回车结束引用,不在引用范围内了！</p><h1 id="2-高级用法"><a href="#2-高级用法" class="headerlink" title="2 高级用法"></a>2 高级用法</h1><h2 id="2-1-插入代码块"><a href="#2-1-插入代码块" class="headerlink" title="2.1 插入代码块"></a>2.1 插入代码块</h2><p>Markdown在IT圈子里面比较流行的一个重要原因是，它能够轻松漂亮地插入代码。<br>方法是，使用三个反引号 ` 进行包裹即可。如果是行内代码引用，使用单个反引号进行包裹</p><p>代码块语法遵循标准 <code>markdown</code> 代码，使用 ``` 开始 ，``` 结束 例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```Python</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">print &apos;Hello World! </span><br><span class="line">```</span><br></pre></td></tr></table></figure><p> 以上标记显示效果如下：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Hello World!</span></span><br></pre></td></tr></table></figure><p>注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。<br>有人会问：<br>如何在代码块中打出 ```<br>实际上是使用 4个` 包含 3个` 就可以了，想表示更多，最外层+1就好了。<br>````<br>```<br>```<br>````</p><h2 id="2-2-插入表格"><a href="#2-2-插入表格" class="headerlink" title="2.2 插入表格"></a>2.2 插入表格</h2><p>表格是Markdown语法中比较复杂的一个，其语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">列1   | 列2 | 列3 </span><br><span class="line">----- | --- | ---- </span><br><span class="line">第1行 | 12  | 13  </span><br><span class="line">第2行 | 22  | 23  </span><br><span class="line">第3行 | 32  | 33</span><br></pre></td></tr></table></figure></p><p>以上标记显示效果如下：</p><table><thead><tr><th>列1</th><th>列2</th><th>列3 </th></tr></thead><tbody><tr><td>第1行</td><td>12</td><td>13  </td></tr><tr><td>第2行</td><td>22</td><td>23  </td></tr><tr><td>第3行</td><td>32</td><td>33  </td></tr></tbody></table><p>可以使用<code>冒号</code>来定义对齐方式：</p><p>全居中样式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">表头|条目一|条目二</span><br><span class="line">:---:|:---:|:---:</span><br><span class="line">项目|项目一|项目二</span><br></pre></td></tr></table></figure></p><p>以上标记显示效果如下：</p><table><thead><tr><th style="text-align:center">表头</th><th style="text-align:center">条目一</th><th style="text-align:center">条目二</th></tr></thead><tbody><tr><td style="text-align:center">项目</td><td style="text-align:center">项目一</td><td style="text-align:center">项目二</td></tr></tbody></table><p>可能有人喜欢左对齐或者右对齐，也可以设置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐    |  右对齐 | 居中 |</span><br><span class="line">| :-------- | -------:| :--: |</span><br><span class="line">| Computer  | 5000 元 |  1台 |</span><br><span class="line">| Phone     | 1999 元 |  1部 |</span><br></pre></td></tr></table></figure></p><p>以上标记显示效果如下：</p><table><thead><tr><th style="text-align:left">左对齐</th><th style="text-align:right">右对齐</th><th style="text-align:center">居中</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">5000 元</td><td style="text-align:center">1台</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">1999 元</td><td style="text-align:center">1部</td></tr></tbody></table><p>注：三个短竖杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。</p><h2 id="2-3-特殊符号处理"><a href="#2-3-特殊符号处理" class="headerlink" title="2.3 特殊符号处理"></a>2.3 特殊符号处理</h2><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure><p>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\ =&gt; \ 。</p><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p><h2 id="2-4-文本居中引用"><a href="#2-4-文本居中引用" class="headerlink" title="2.4 文本居中引用"></a>2.4 文本居中引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125;</span><br><span class="line">人生乃是一面镜子，</span><br><span class="line">从镜子里认识自己，</span><br><span class="line">我要称之为头等大事，</span><br><span class="line">也只是我们追求的目的！</span><br><span class="line">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><blockquote class="blockquote-center"><p>人生乃是一面镜子，<br>从镜子里认识自己，<br>我要称之为头等大事，<br>也只是我们追求的目的！</p></blockquote><h2 id="2-5-主题自带样式-note-标签"><a href="#2-5-主题自带样式-note-标签" class="headerlink" title="2.5 主题自带样式 note 标签"></a>2.5 主题自带样式 note 标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note default&quot;&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><div class="note default"><p>default</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><div class="note primary"><p>primary</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><div class="note success"><p>success</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><div class="note warning"><p>warning</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以上标记显示效果如下：</p><div class="note danger"><p>danger</p></div><p>在<code>主题配置文件</code>中需要配置下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 要不要图标</span><br><span class="line">  icons: true</span><br><span class="line">  # 圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure><h1 id="3-文章编辑"><a href="#3-文章编辑" class="headerlink" title="3 文章编辑"></a>3 文章编辑</h1><h2 id="3-1-文章配置"><a href="#3-1-文章配置" class="headerlink" title="3.1 文章配置"></a>3.1 文章配置</h2><p>在<code>hexo</code>文件夹下右键点击<code>Git Bash here</code>后键入<code>$hexo new page &quot;name&quot;</code>，<code>source/_post</code> 文件夹中就会生成<code>name.md</code>文件，打开后即可编辑，编辑格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章名</span><br><span class="line">date: <span class="number">2019</span>-<span class="number">04</span>-<span class="number">09</span> <span class="number">12</span>:<span class="number">27</span>:<span class="number">52</span>     <span class="comment">//发表日期</span></span><br><span class="line">updated: <span class="number">2019</span>-<span class="number">04</span>-<span class="number">09</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">52</span>  <span class="comment">//更新日期</span></span><br><span class="line">categories: Markdown          <span class="comment">//文章分类</span></span><br><span class="line">tags: [tag1,tag2]             <span class="comment">//文章标签，多标签时使用英文逗号隔开</span></span><br><span class="line">photos:                       <span class="comment">//如果使用Fancybox（文章头部展示图片），如此设置  </span></span><br><span class="line">                              <span class="comment">//注意冒号后面有空格</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="3-2-文章折叠"><a href="#3-2-文章折叠" class="headerlink" title="3.2 文章折叠"></a>3.2 文章折叠</h2><p>在要显示的文字末尾添加如下代码实现文章在主页的折叠显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img width=&quot;272px&quot; src=&quot;https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/013.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://blog.enjoytoshare.club/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://blog.enjoytoshare.club/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>算法与数据结构知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/algorithm-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/algorithm-arrangement.html</id>
    <published>2019-03-31T14:13:40.000Z</published>
    <updated>2019-03-31T14:13:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><pre><code>本章重点：- 数据结构的基本概念- 算法与算法设计的要求</code></pre><p>计算机解决问题的一般步骤：<br>建立数学模型 =&gt; 设计算法 =&gt; 编写程序 =&gt; 测试、调整程序来解决问题</p><pre><code>数学模型：</code></pre><ul><li>数值问题（数学方程）</li><li>非数值问题（集合、线性表、树、图等）</li></ul><p>数据结构：是一门研究非数值计算的程序设计问题中计算机的操作对象以及它们之间的关系和操作等等的学科。</p><h2 id="1-基本概念和术语"><a href="#1-基本概念和术语" class="headerlink" title="1 基本概念和术语"></a>1 基本概念和术语</h2><h3 id="1-1-数据（Data）"><a href="#1-1-数据（Data）" class="headerlink" title="1.1 数据（Data）"></a>1.1 数据（Data）</h3><ul><li>客观事务的符号表示</li><li>所有能够输入到计算机中并被计算机程序处理的符号的总称</li><li>信息在计算机中的表现形式</li><li>图像、声音、符号等等</li></ul><h3 id="1-2-数据元素（Data-Element）"><a href="#1-2-数据元素（Data-Element）" class="headerlink" title="1.2 数据元素（Data Element）"></a>1.2 数据元素（Data Element）</h3><ul><li>数据的基本单位，计算机中通常作为一个整体来考虑，如一棵树中的一个结点、一个图中的一个结点。</li><li>一个数据元素可以有若干个数据项（Data Item）组成。</li></ul><h3 id="1-3-数据对象（Data-Object）"><a href="#1-3-数据对象（Data-Object）" class="headerlink" title="1.3 数据对象（Data Object）"></a>1.3 数据对象（Data Object）</h3><ul><li>性质相同的数据元素的集合。</li></ul><h2 id="2-数据结构的定义"><a href="#2-数据结构的定义" class="headerlink" title="2 数据结构的定义"></a>2 数据结构的定义</h2><p>数据结构：相互之间存在一种或多种关系的数据元素的集合。</p><ul><li>数据元素之间的关系——结构</li><li>四种基本结构：<br>（1）集合<br>（2）线性结构<br>（3）树形结构<br>（4）图状结构/网状结构</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章-绪论&quot;&gt;&lt;a href=&quot;#第一章-绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 绪论&quot;&gt;&lt;/a&gt;第一章 绪论&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;本章重点：
- 数据结构的基本概念
- 算法与算法设计的要求
&lt;/code&gt;&lt;/pre&gt;&lt;p
      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研计算机专业课" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="数据结构" scheme="https://blog.enjoytoshare.club/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络知识整理</title>
    <link href="https://blog.enjoytoshare.club/article/network-arrangement.html"/>
    <id>https://blog.enjoytoshare.club/article/network-arrangement.html</id>
    <published>2019-03-31T13:56:38.000Z</published>
    <updated>2019-03-31T13:56:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190401125408.png" alt></p><h1 id="第一章-计算机网络概述"><a href="#第一章-计算机网络概述" class="headerlink" title="第一章 计算机网络概述"></a>第一章 计算机网络概述</h1><pre><code>网络和计算机网络的区分</code></pre><ul><li>网络包含着计算机网络</li><li>电话网、铁路网、人体内神经系统网络、消化系统网络等亦属于网络的范畴</li></ul><h2 id="1-计算机网络的概念"><a href="#1-计算机网络的概念" class="headerlink" title="1 计算机网络的概念"></a>1 计算机网络的概念</h2><pre><code>计算机网络：是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。</code></pre><p>计算机网络是互连的、自治的计算机集合。</p><p>互连 —— 互联互通、通信链路<br>自治 —— 无主从关系</p><h2 id="2-计算机网络的功能"><a href="#2-计算机网络的功能" class="headerlink" title="2 计算机网络的功能"></a>2 计算机网络的功能</h2><p>前两个功能最常考：</p><ul><li>（1）数据通信（连通性）</li><li>（2）资源共享（包括三类共享：硬件、软件和数据共享）</li><li>（3）分布式处理（多台计算机各自承担同一工作任务的不同部分，例如Hadoop平台）</li><li>（4）提高可靠性（替代机替代）</li><li>（5）负载均衡（各计算机之间更加亲密）</li></ul><h2 id="3-计算机网络的组成"><a href="#3-计算机网络的组成" class="headerlink" title="3 计算机网络的组成"></a>3 计算机网络的组成</h2><h3 id="3-1-按组成部分来分"><a href="#3-1-按组成部分来分" class="headerlink" title="3.1 按组成部分来分"></a>3.1 按组成部分来分</h3><ul><li>（1）硬件</li><li>（2）软件</li><li>（3）协议</li></ul><h3 id="3-2-按工作方式来分"><a href="#3-2-按工作方式来分" class="headerlink" title="3.2 按工作方式来分"></a>3.2 按工作方式来分</h3><ul><li>（1）边缘部分：用户可以直接使用，包括两种：（1）C/S方式（2）P2P方式</li><li>（2）核心部分：为边缘部分服务</li></ul><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190401133526.png" alt></p><h3 id="3-3-按功能组成来分"><a href="#3-3-按功能组成来分" class="headerlink" title="3.3 按功能组成来分"></a>3.3 按功能组成来分</h3><ul><li>（1）通信子网：实现数据通信</li><li>（2）资源子网：实现资源共享/数据处理</li></ul><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190401135211.png" alt></p><h2 id="4-计算机网络的分类"><a href="#4-计算机网络的分类" class="headerlink" title="4 计算机网络的分类"></a>4 计算机网络的分类</h2><h3 id="4-1-按分布范围来分"><a href="#4-1-按分布范围来分" class="headerlink" title="4.1 按分布范围来分"></a>4.1 按分布范围来分</h3><ul><li>（1）广域网WAN</li><li>（2）城域网MAN</li><li>（3）局域网LAN</li><li>（4）个人区域网PAN</li></ul><p>通常，广域网WAN使用的是交换技术，局域网LAN使用的是广播技术</p><h3 id="4-2-按使用者来分"><a href="#4-2-按使用者来分" class="headerlink" title="4.2 按使用者来分"></a>4.2 按使用者来分</h3><ul><li>（1）公用网</li><li>（2）专用网</li></ul><h3 id="4-3-按交换技术来分"><a href="#4-3-按交换技术来分" class="headerlink" title="4.3 按交换技术来分"></a>4.3 按交换技术来分</h3><ul><li>（1）电路交换</li><li>（2）报文交换</li><li>（3）分组交换</li></ul><h3 id="4-4-按拓扑结构来分"><a href="#4-4-按拓扑结构来分" class="headerlink" title="4.4 按拓扑结构来分"></a>4.4 按拓扑结构来分</h3><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190401140437.png" alt></p><p>目前我们使用的最大的因特网就属于网状型拓扑结构</p><h3 id="4-5-按传输技术来分"><a href="#4-5-按传输技术来分" class="headerlink" title="4.5 按传输技术来分"></a>4.5 按传输技术来分</h3><ul><li>（1）广播式网络：共享公共通信信道</li><li>（2）点对点网络：使用分组存储转发和路由选择机制</li></ul><pre><code>脑图时刻，记忆一下：</code></pre><p><img src="https://raw.githubusercontent.com/wugenqiang/picGo/master/pictures/20190401141128.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wugenqiang/picGo/m
      
    
    </summary>
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/"/>
    
      <category term="考研计算机专业课" scheme="https://blog.enjoytoshare.club/categories/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/%E8%80%83%E7%A0%94/%E8%80%83%E7%A0%94%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="课程复习整理" scheme="https://blog.enjoytoshare.club/tags/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
      <category term="考研" scheme="https://blog.enjoytoshare.club/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="计算机网络" scheme="https://blog.enjoytoshare.club/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
